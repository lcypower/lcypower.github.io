{"version":3,"file":"component---src-templates-blog-template-js-5d4b4c86d92a7b0c2941.js","mappings":"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","sources":["webpack://lcypower.github.io/./src/components/post-header/index.js","webpack://lcypower.github.io/./src/components/post-navigator/index.js","webpack://lcypower.github.io/./src/components/post-content/index.js","webpack://lcypower.github.io/./src/components/utterances/index.js","webpack://lcypower.github.io/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostHeader({ post }) {\n  return (\n    <header className=\"post-header\">\n      <div className=\"post-header-background\" style={{backgroundImage:`url(${post.thumbnail})`}}>\n        <div className='post-header-icon'>\n          {post.emoji && <div className=\"emoji\"><img src={post.emoji} /></div>}\n          <div className=\"info\">\n            <div className=\"categories\">\n              {post.categories.map((category) => (\n                <Link className=\"category\" key={category} to={`/posts/${category}`}>\n                  #{category}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h1 className=\"title\">{post.title}</h1>\n      <div className=\"info\">\n        <div className=\"author\">\n          posted by <strong>{post.author}</strong>,\n        </div>{' '}\n        {post.date}\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostNavigator({ prevPost, nextPost }) {\n  return (\n    <div className=\"post-navigator\">\n      <div className=\"post-navigator-card-wrapper\">\n        {nextPost && (\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <div className=\"post-navigator-card-wrapper\">\n        {prevPost && (\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostNavigator;\n","import React from 'react';\nimport './style.scss';\n\nfunction PostContent({ html }) {\n  return (\n    <div className=\"post-content\">\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n\nexport default PostContent;\n","import React, { createRef, useEffect, useRef } from 'react';\nimport { getValueFromLocalStorage } from '../../utils/localStorage';\n\nconst url = 'https://utteranc.es';\nconst branch = 'master';\n\nconst getTheme = () => getValueFromLocalStorage('isDarkMode') ? 'photon-dark' : 'github-light'\n\nconst resetChangeListener = () => {\n  const utterances = document.querySelector('iframe')?.contentWindow;\n  utterances?.postMessage({\n    type: 'set-theme',\n    theme: getTheme()\n  }, url);\n}\n\nfunction Utterances({ repo, path }) {\n  const rootElm = createRef();\n  const isUtterancesLoaded = useRef(false);\n\n  useEffect(() => {\n    if (!rootElm.current || isUtterancesLoaded.current) return;\n\n    const utterances = document.createElement('script');\n    const utterancesConfig = {\n      src: `${url}/client.js`,\n      repo,\n      branch,\n      theme: getTheme(),\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    };\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey]);\n    });\n    rootElm.current.appendChild(utterances);\n    window.addEventListener('theme', resetChangeListener)\n    isUtterancesLoaded.current = true;\n  }, [repo, rootElm, path]);\n\n  return <div className=\"utterances\" ref={rootElm} />;\n}\n\nexport default Utterances;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport PostHeader from '../components/post-header';\nimport PostNavigator from '../components/post-navigator';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport Utterances from '../components/utterances';\n\nfunction BlogTemplate({ data }) {\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { comments } = data.site?.siteMetadata;\n  const utterancesRepo = comments?.utterances?.repo;\n\n  return (\n    <Layout>\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} />\n      <PostContent html={curPost.html} />\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\n      {utterancesRepo && <Utterances repo={utterancesRepo} path={curPost.slug} />}\n    </Layout>\n  );\n}\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 500, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n        thumbnail\n        description\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n        thumbnail\n        description\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n        thumbnail\n        description\n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          utterances {\n            repo\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","post","React","className","style","backgroundImage","thumbnail","emoji","src","categories","map","category","Link","key","to","title","author","date","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","url","getTheme","getValueFromLocalStorage","resetChangeListener","_document$querySelect","utterances","document","querySelector","contentWindow","postMessage","type","theme","repo","path","rootElm","createRef","isUtterancesLoaded","useRef","useEffect","current","createElement","utterancesConfig","branch","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","appendChild","window","addEventListener","ref","_data$site","_comments$utterances","data","curPost","Post","cur","prev","next","comments","site","siteMetadata","utterancesRepo","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Utterances"],"sourceRoot":""}